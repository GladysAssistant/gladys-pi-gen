name: Gladys OS Build

on:  
  push:
    tags:
    - 'v*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04   
    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v2
      - 
        name: Get the version (git tag)
        id: get_version
        run: |
          echo ${GITHUB_REF/refs\/tags\//}
          echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - 
        name: 🖥️ Install pi-gen required dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update --fix-missing
          sudo apt-get install -y coreutils quilt parted qemu-user-static debootstrap zerofree zip dosfstools libarchive-tools libcap2-bin grep rsync xz-utils file git curl bc qemu-utils kpartx
      - 
        name: 🚫 Disable Noobs export
        run: |
          rm ./stage2/EXPORT_NOOBS
      - 
        name: 🍓 Building Raspberry image
        run: |
          sudo CLEAN=1 BUILD_VERSION=${{ steps.get_version.outputs.VERSION }} ./build.sh -c config
      - 
        name: ✔️ Check prepared images
        run: |
          ls -al ./deploy
          test -f ./deploy/image_gladys-os-rpi-lite.zip
      - 
        name: 🏷️ Rename files for release
        run: |
          sudo mv ./deploy/gladys-os-rpi-lite.info ./gladys-os-rpi-lite-${{ steps.get_version.outputs.VERSION }}.info
          sudo mv ./deploy/image_gladys-os-rpi-lite.zip ./gladys-os-rpi-lite-${{ steps.get_version.outputs.VERSION }}.zip
      - 
        name: 📦 Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            gladys-os-rpi-lite-${{ steps.get_version.outputs.VERSION }}.info
            gladys-os-rpi-lite-${{ steps.get_version.outputs.VERSION }}.zip
